/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as PollsRouteImport } from './routes/polls'
import { Route as KeysRouteImport } from './routes/keys'
import { Route as AdminRouteImport } from './routes/admin'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PollsIndexRouteImport } from './routes/polls/index'
import { Route as PollsCreateRouteImport } from './routes/polls/create'
import { Route as PollsPollIdRouteImport } from './routes/polls/$pollId'

const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const PollsRoute = PollsRouteImport.update({
  id: '/polls',
  path: '/polls',
  getParentRoute: () => rootRouteImport,
} as any)
const KeysRoute = KeysRouteImport.update({
  id: '/keys',
  path: '/keys',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PollsIndexRoute = PollsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => PollsRoute,
} as any)
const PollsCreateRoute = PollsCreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => PollsRoute,
} as any)
const PollsPollIdRoute = PollsPollIdRouteImport.update({
  id: '/$pollId',
  path: '/$pollId',
  getParentRoute: () => PollsRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/keys': typeof KeysRoute
  '/polls': typeof PollsRouteWithChildren
  '/profile': typeof ProfileRoute
  '/polls/$pollId': typeof PollsPollIdRoute
  '/polls/create': typeof PollsCreateRoute
  '/polls/': typeof PollsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/keys': typeof KeysRoute
  '/profile': typeof ProfileRoute
  '/polls/$pollId': typeof PollsPollIdRoute
  '/polls/create': typeof PollsCreateRoute
  '/polls': typeof PollsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/keys': typeof KeysRoute
  '/polls': typeof PollsRouteWithChildren
  '/profile': typeof ProfileRoute
  '/polls/$pollId': typeof PollsPollIdRoute
  '/polls/create': typeof PollsCreateRoute
  '/polls/': typeof PollsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/keys'
    | '/polls'
    | '/profile'
    | '/polls/$pollId'
    | '/polls/create'
    | '/polls/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/keys'
    | '/profile'
    | '/polls/$pollId'
    | '/polls/create'
    | '/polls'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/keys'
    | '/polls'
    | '/profile'
    | '/polls/$pollId'
    | '/polls/create'
    | '/polls/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRoute
  KeysRoute: typeof KeysRoute
  PollsRoute: typeof PollsRouteWithChildren
  ProfileRoute: typeof ProfileRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/polls': {
      id: '/polls'
      path: '/polls'
      fullPath: '/polls'
      preLoaderRoute: typeof PollsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/keys': {
      id: '/keys'
      path: '/keys'
      fullPath: '/keys'
      preLoaderRoute: typeof KeysRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/polls/': {
      id: '/polls/'
      path: '/'
      fullPath: '/polls/'
      preLoaderRoute: typeof PollsIndexRouteImport
      parentRoute: typeof PollsRoute
    }
    '/polls/create': {
      id: '/polls/create'
      path: '/create'
      fullPath: '/polls/create'
      preLoaderRoute: typeof PollsCreateRouteImport
      parentRoute: typeof PollsRoute
    }
    '/polls/$pollId': {
      id: '/polls/$pollId'
      path: '/$pollId'
      fullPath: '/polls/$pollId'
      preLoaderRoute: typeof PollsPollIdRouteImport
      parentRoute: typeof PollsRoute
    }
  }
}

interface PollsRouteChildren {
  PollsPollIdRoute: typeof PollsPollIdRoute
  PollsCreateRoute: typeof PollsCreateRoute
  PollsIndexRoute: typeof PollsIndexRoute
}

const PollsRouteChildren: PollsRouteChildren = {
  PollsPollIdRoute: PollsPollIdRoute,
  PollsCreateRoute: PollsCreateRoute,
  PollsIndexRoute: PollsIndexRoute,
}

const PollsRouteWithChildren = PollsRoute._addFileChildren(PollsRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRoute,
  KeysRoute: KeysRoute,
  PollsRoute: PollsRouteWithChildren,
  ProfileRoute: ProfileRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
